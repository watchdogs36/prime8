<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<addon id="context.watchdogs" version="20.5.20" name="   [COLORmagenta]Watchdogs [COLORcyan]Context[/COLOR]" provider-name="[COLORmagenta]• [COLORcyan]Cable [COLORmagenta]•[/COLOR]">
    <requires>
        <import addon="xbmc.python" version="2.23.0" />
    </requires>
    <extension point="kodi.context.item">
        <menu id="kodi.core.main">
            <item library="contextSettings.py">
                <label>[B][COLORgold]Watchdogs[/COLOR][/B] - CM Settings</label>
                <visible>
                    String.IsEqual(Window(home).Property(context.watchdogs.settings),true) +
                    String.StartsWith(ListItem.path,plugin://plugin.video.watchdogs/) +
                    String.IsEqual(ListItem.Property(isWatchdogs_widget),true)
                </visible>
            </item>

            <item library="traktManager.py">
                <label>[B][COLORgold]Watchdogs[/COLOR][/B] - Trakt Manager</label>
                <visible>
                    String.IsEqual(Window(home).Property(context.watchdogs.traktManager),true) +
                    String.StartsWith(ListItem.path,plugin://plugin.video.watchdogs/) +
                    String.IsEqual(ListItem.Property(isWatchdogs_widget),true) +
                    [String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,season) | String.IsEqual(ListItem.dbtype,movie)]
                </visible>
            </item>

            <item library="clearProviders.py">
                <label>[B][COLORgold]Watchdogs[/COLOR][/B] - Clear Providers</label>
                <visible>
                    String.IsEqual(Window(home).Property(context.watchdogs.clearProviders),true) +
                    String.StartsWith(ListItem.FolderPath,plugin://plugin.video.watchdogs/?action=play) +
                    String.IsEqual(ListItem.Property(isWatchdogs_widget),true) +
                    [String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
                </visible>
            </item>

            <item library="clearBookmark.py">
                <label>[B][COLOR red]Watchdogs[/COLOR][/B] - Clear Item Bookmark</label>
                <visible>
                    String.IsEqual(Window(home).Property(context.watchdogs.clearBookmark),true) +
                    String.StartsWith(ListItem.FolderPath,plugin://plugin.video.watchdogs/?action=play) +
                    String.IsEqual(ListItem.Property(isWatchdogs_widget),true) +
<!--                    !String.IsEqual(ListItem.Property(resumetime),0) + -->
                    !String.IsEqual(ListItem.Property(watchdogs_resumetime),0) +
                    [String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
                </visible>
            </item>
            <item library="rescrape.py">
                <label>[B][COLORgold]Watchdogs[/COLOR][/B] - Rescrape Item</label>
                <visible>
                    String.IsEqual(Window(home).Property(context.watchdogs.rescrape),true) +
                    String.StartsWith(ListItem.FolderPath,plugin://plugin.video.watchdogs/?action=play) +
                    String.IsEqual(ListItem.Property(isWatchdogs_widget),true) +
                    [String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
                </visible>
            </item>

            <item library="playFromHere.py">
                <label>[B][COLORgold]Watchdogs[/COLOR][/B] - Play from here</label>
                <visible>
                    String.IsEqual(Window(home).Property(context.watchdogs.playFromHere),true) +
                    String.StartsWith(ListItem.path,plugin://plugin.video.watchdogs/) +
                    String.IsEqual(ListItem.Property(isWatchdogs_widget),true) +
                    String.IsEqual(ListItem.dbtype,episode)
                </visible>
            </item>

            <item library="autoPlay.py">
                <label>[B][COLORgold]Watchdogs[/COLOR][/B] - Auto Play</label>
                <visible>
                    String.IsEmpty(Window(home).Property(plugin.video.watchdogs.autoPlay)) +
                    String.IsEqual(Window(home).Property(context.watchdogs.autoPlay),true) +
                    String.StartsWith(ListItem.FolderPath,plugin://plugin.video.watchdogs/?action=play) +
                    String.IsEqual(ListItem.Property(isWatchdogs_widget),true) +
                    [String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
                </visible>
            </item>

            <item library="sourceSelect.py">
                <label>[B][COLORgold]Watchdogs[/COLOR][/B] - Source Select</label>
                <visible>
                    !String.IsEmpty(Window(home).Property(plugin.video.watchdogs.autoPlay)) +
                    String.IsEqual(Window(home).Property(context.watchdogs.sourceSelect),true) +
                    String.StartsWith(ListItem.FolderPath,plugin://plugin.video.watchdogs/?action=play) +
                    String.IsEqual(ListItem.Property(isWatchdogs_widget),true) +
                    [String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
                </visible>
            </item>

            <item library="findSimilar.py">
                <label>[B][COLORgold]Watchdogs[/COLOR][/B] - Find Similar</label>
                <visible>
                    String.IsEqual(Window(home).Property(context.watchdogs.findSimilar),true) +
                    String.StartsWith(ListItem.path,plugin://plugin.video.watchdogs/) +
                    String.IsEqual(ListItem.Property(isWatchdogs_widget),true) +
                    [String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,movie)]
                </visible>
            </item>

            <item library="browseSeries.py">
                <label>[B][COLORgold]Watchdogs[/COLOR][/B] - Browse Series</label>
                <visible>
                    String.IsEqual(Window(home).Property(context.watchdogs.browseSeries),true) +
                    String.StartsWith(ListItem.path,plugin://plugin.video.watchdogs/) +
                    String.IsEqual(ListItem.Property(isWatchdogs_widget),true) +
                    [String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,tvshow)]
                </visible>
            </item>

            <item library="browseEpisodes.py">
                <label>[B][COLORgold]Watchdogs[/COLOR][/B] - Browse Episodes</label>
                <visible>
                    String.IsEqual(Window(home).Property(context.watchdogs.browseEpisodes),true) +
                    String.StartsWith(ListItem.path,plugin://plugin.video.watchdogs/) +
                    String.IsEqual(ListItem.Property(isWatchdogs_widget),true) +
                    String.IsEqual(ListItem.dbtype,episode)
                </visible>
            </item> -->

        </menu>
    </extension>
    <extension point="xbmc.addon.metadata">
        <summary lang="en">[COLORwhite]Watchdogs Context Menu[/COLOR]</summary>
        <description>[COLORwhite]Watchdogs Context Menu[/COLOR]</description>
        <disclaimer lang="en">The author of this addon do not host any of the content which is found and have no affiliation with any of the content providers. This addon simply searches websites for content. Use at your own risk!</disclaimer>
        <platform>all</platform>
        <license>GNU GENERAL PUBLIC LICENSE. Version 3, 29 June 2007</license>
        <forum></forum>
        <website></website>
        <source></source>
        <disclaimer lang="en"></disclaimer>
        <assets>
            <icon>icon.png</icon>
            <fanart>fanart.jpg</fanart>
        </assets>
        <news>
        </news>
    </extension>
</addon>
